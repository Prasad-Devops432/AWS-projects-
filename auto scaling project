AWS Cloud Deployment with Python on EC2

This setup deploys a Python application across two EC2 instances in a highly available AWS architecture.





VPC and Subnets: The architecture uses a Virtual Private Cloud (VPC) with two Availability Zones. Each zone has a public subnet (for load balancing) and a private subnet (for secure servers).



Application Load Balancer: Distributes traffic to EC2 instances across both zones, ensuring no single point of failure.



NAT Gateway: Allows servers in private subnets to access the internet for updates, like downloading Python packages.



Auto Scaling Group: Automatically adjusts the number of EC2 instances based on demand, maintaining performance.



Security Groups: Controls inbound/outbound traffic to the instances, e.g., allowing HTTP/HTTPS and SSH.



Python Deployment:





A Python file (e.g., app.py) is deployed on both EC2 instances in the private subnets.



Steps: Upload app.py via SCP (scp -i key.pem app.py ec2-user@<private-ip>:~), install dependencies (e.g., pip install flask via SSH), and run it (e.g., python app.py).



Example app.py hosts a simple web app accessible via the load balancer.



S3 Gateway: Provides secure data access for the application.




